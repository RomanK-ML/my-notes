HTML

<link​ ​rel​=​"stylesheet"​ ​type​=​"text/css"​ ​href​=​"style.css"> - подключение css.

<div> - Блочный элемент​ создает разрыв строки перед тегом и после него

<span> - не создают блоки, они отображаются на одной строке с содержимым рядом  стоящих тегов

<b>, <strong> - тэг делает текст полужирным (строчный элемент).

<i>, <em> - тэг делает текст курсивным (строчный элемент).

<br> - тег переноса строки.

<hr> - тег горизонтальной линии.

<a​ ​href​=​"contacts.htm" target="_blank​​> - тэг ссылка target="_blank - ссылка откроется в новой вкладке.

<img​ ​src​=​"book.png"​ ​​alt​=​"Книга"​ ​/> - тэг картинка.

<meta​ ​charset​=​"UTF­8"> - кодировка.

<h1> - <h6> - заголовки.

<small> - ​Уменьшает размер шрифта на единицу по отношению к обычному тексту.  

<sub>​ -  Используется для создания нижних индексов. Сдвигает текст ниже уровня строки, уменьшая его  размер.

<sup>​ - Используется для создания степеней и верхних индексов. Сдвигает текст выше уровня строки,  уменьшая его размер.

<ins>​ - Выделяет текст в новой версии документа, подчёркивая его.

<del> - ​Перечёркивает текст. Используется для выделения текста, удаленного из документа.

<code>​ - Служит для выделения фрагментов программного кода. Отображается моноширинным  шрифтом.

<pre>​ - Позволяет вывести текст на экран, сохранив изначальное форматирование. Пробелы и переносы  строк при этом не удаляются.

<q>​ - Используется для выделения коротких цитат. Браузерами заключается в кавычки. 

&nbsp; - неразрывный пробел. 

&copy; - знак copyright  ©.

&quot; и &raquo; - двойные кавычки “ и ».

&lt; и &gt; - символы < и >.

&prime; - одиночный штрих  ′.

<!­­​  ­­> - комментарии.

<ul><li></li></ul> - маркированный список.

<ul><li></li></ul> - нумерованный список.

form - В этом теге могут  находиться атрибуты, необходимые для правильной работы формы.

<fieldset> -  предназначен для группирования элементов формы.

<legend>​ -  не обязателен, но если присутствует, должен идти сразу же после тега <fieldset>.  Внутри ​<legend>​ можно использовать теги  форматирования вроде ​<b>, <i>.

<textarea> - используется для того, чтобы сформировать многострочное поле ввода для  большого количества информации.

<select> -  представляет собой выпадающий список, элементы которого указываются в тэге  <option>

<input />​ -  Он в зависимости от значения атрибута ​type ​будет выглядеть по­разному и  иметь разные значения.
<input type=​"​text​" /> -  это означает, что это обычное однострочное  поле ввода. В значении атрибута ​size ​указывается размер этого поля в символах. Атрибут  placeholder ​выводит текст внутри текстового поля, который исчезает при начале ввода символов.  
<input type="password" /> -  ​выглядит также, как и предыдущий, но он используется для ввода  пароля и все символы будут показываться как точки, чтобы пароль нельзя было подсмотреть.  
<input type="checkbox" /> - предоставляют  пользователю возможность право выбора некоторых пунктов. множественного выбора нескольких пунктов
<input type="radio" /> - предоставляют  пользователю возможность право выбора некоторых пунктов.  единственный выбор
<inpu​t type="file"​ /> - >​ предоставляет пользователю возможность выбора файла на своем  компьютере, для того, чтобы загрузить его на сервер.   
<input ​type​=​"submit" />  -  отправляет данные на сервер
<input ​type​=​"reset" />  -  ​предназначена  для того, чтобы очистить все поля в форме.
<input ​type​=​"button" />  - просто кнопка, при нажатии на  которой ничего не произойдет, но ее, например, можно привязать к событию javascript.

<label>​ -  устанавливает связь между определенной меткой, в качестве которой обычно выступает  текст, и элементом формы (​<input>, <select>, <textarea>​).

 
<table> - Любая таблица в html помещается в контейнер <table>, после чего в контейнер строки <tr> помещаются  уже столбцы таблицы, которые помещаются в тег <td>.

<th> - Элемент <th> создает заголовок — специальную ячейку, текст в которой выделяется полужирным  шрифтом. Количество ячеек заголовка определяется количеством пар тегов <th>…</th>.

<caption>...</caption> ­ обрамление заголовка таблицы (текст, размещенный между этими  тегами, выравнивается по центру). В исходном коде тег <caption> ставится сразу после тега  <table>;   
<thead>...</thead> ­ обрамление шапки таблицы (в одной таблице допускается не более одного  тега <thead>);   
<tbody>...</tbody> ­ группирует строки таблицы в один табличный блок (таких блоков в таблице  может быть несколько);   
<tfoot>...</tfoot> ­ обрамление футера, т.е. нижней, завершающей части таблицы (в одной  таблице допускается не более одного тега <tfoot>). В исходном коде тег <tfoot> ставится до тега  <tbody>. 

colspan ­ объединяет ячейки по горизонтали  
rowspan ­ объединяет ячейки по вертикали

<!­­[if gte IE 6]>   
	<link​ ​href​=​"css/style_ie.css"​ ​rel​=​"stylesheet"​ ​type​=​"text/css"​ ​/>  
<![endif]­­>

lt – версия меньше указанной;   
lte – версия меньше или равно указанной;   
gt – версия больше указанной;   
gte ­ версия больше или равно указанной
[if (IE 6) & (IE 7)] – 6­я версия И 7­я версия;   
[if (IE 6) | (IE 7)] – 6­я версия ИЛИ 7­я версия;   
[if !(IE 8)] – НЕ 8­я версия. 

CSS

color: ​blue​; - цвет текста.

background: ​#ccc​; - тэг фона.
background​­​color​:​ ​#ff0;  ­ задает цвет фона, который можно задавать любым из трех способов задания  цветов.    
background​­​image​:​ url​(​img​/​photo​.​jpg​); - используется для того, чтобы в качестве фона можно было установит  изображение. 
background​­​position​:​ top​;​ ​(​bottom ​|​ left ​|​ right)  - указывает где будет располагаться фоновое изображение.
background​­​repeat​:​ repeat​­​x​;​ ​(​repeat​­​y ​|​ ​no​­​repeat)  -  нужно ли повторять фоновое  изображение
background​­​attachment​:​ ​fixed; -  определяет, будет ли изображение прокручиваться вместе с  содержимым элемента.
background​:​  url​(​img​/​HTML5​.​png​)​ top center ​no​­​repeat,  url​(​img​/​css3​.​png​)​ top right ​no​­​repeat; - Для того, чтобы задать несколько картинок для одного элемента в качестве фонового изображения, их  необходимо перечислить через запятую для свойства background:
background-origin: Свойство определяет, где будет позиционироваться фоновое изображение.
background-size Свойство позволяет масштабировать фоновое изображение по вертикали и горизонтали 

border: ​1px solid black​; - цвет и толщина рамки.
border​­​color​:​ red​;​ ​(​#f00 | RGB(255, 0, 0))  - цвет рамки.
border​­​style​:​ solid​;​ ​(​dotted ​|​ dashed ​|​ groove ​|​ ridge ​|​ solid ​|​ ​double​ ​|​ inset ​|  outset)  - стиль рамки, которая может быть разных значений, такие как: dotted, dashed, solid,  double, groove, ridge, inset, outset. border­width задает толщину рамки, причем ее можно задать  для каждой из 4 сторон отдельн
border​­​width​:​ ​2px; - ширина рамки.

border​­​collapse​:​ collapse; - Есть ещё одно полезное свойство для оформления таблиц. Если для всех ячеек задать атрибут  cellspacing=”0”, или CSS свойство border­spacing=”0”, то границы соседних ячеек будут двойными. Для  того, чтобы убрать двойные границы, в CSS существует свойство border­collapse.

width: 200px; - ширина 200 пикселей;

height: 100px; - - высота 100 пикселей;

font​­​size​:​ ​10px​; - размер текста.

font​­​family​:​ ​"Times New Roman"​,​ serif​,​ ​Verdana; - устанавливает шрифт текста. 
serif — шрифты с засечками; 
sans­serif — рубленные шрифты, без засечек;  
cursive — курсивные шрифты;  
fantasy — декоративные шрифты; 
monospace — моноширинные шрифты.

font​­​style​:​ italic​;​ ​(​oblique ​|​ normal)  font​­​variant​:​ small​­​caps;  -  стиль шрифта
font​­​weight​:​ bold​;​ ​(​bolder ​|​ lighter​|​ ​100​ ​|​ ​200​);  - задает насыщенность шрифта
font​­​size​:​ ​20px​;​ ​(​small ​|​ medium ​|​ large​);  - определяет размер шрифта.

list​­​style​:​ circle inside; - Свойство list­style определяет стиль маркера у списков.
list​­​style​­​type​:​ circle​;​ ​(​disc ​|​ square ​|​ armenian ​|​ ​decimal) -  тип маркера, который может быть разных видов
list​­​style​­​position​:​ inside;  - определяет то, где располагается маркер, по умолчанию у него значение  outside.
list​­​style​­​image​:​ url​(​img​/​list​.​png​); -  позволяет вместо маркера установить изображение, для этого нужно указать к  нему путь в скобках url. 

text​­​align​:​ center​;​ ​(​justify ​|​ left ​|​ right)  
text​­​decoration​:​ none​;​ ​(​line​­​through ​|​ overline ​|​ underline ​|​ none)  
text​­​transform​:​ capitalize​;​ ​(​lowercase ​|​ uppercase) 

border­spacing – внешние отступы  
padding – внутренние отступ

vertical​­​align​:​ top​;​ ​(​bottom ​|​ baseline ​|​ middle) - Для вертикального выравнивания внутри ячейки у тега <td> существует устаревший атрибут valign. Для  его замены в CSS существует свойство vertical­align.

opacity​:​ ​0.1​ ​….​ ​1; - При помощи свойства opacity можно задавать элементу полупрозрачность. Значение указывается в  интервале от 0 до 1, где 0 ­ элемента не будет видно, но при этом он не исчезнет из потока документа,  как в случае со свойством display: none. А при значении 1 элемент будет четко виден

a:link — ссылается на непосещенную ссылку.  
a:visited — ссылается на уже посещенную ссылку.  
a:hover — ссылается на любой элемент, по которому проводят курсором мыши.  
a:focus — ссылается на любой элемент, над которым находится курсор мыши.  
a:active — ссылается на элемент, который был активизирован пользователем.  
:valid — выберет поля формы, содержимое которых прошло проверку в браузере на соответствие  указанному типу.  
:invalid — выберет поля формы, содержимое которых не соответствует указанному типу. :enabled —  выберет все доступные (активные) поля форм.  
:disabled — выберет заблокированные поля форм, т.е. находящиеся в неактивном состоянии.  
:in­range — выберет поля формы, значения которых находятся в заданном диапазоне.  
:out­of­range — выберет поля формы, значения которых не входят в установленный диапазон.  
:lang() — выбирает абзацы на указанном языке. :not(селектор) — выберет элементы, которые не  содержат указанный селектор, например, класс, идентификатор или селектор элемента  
:not([type="submit"]). :target — выбирает элемент с символом #, на который ссылаются в документе. 
:checked — выбирает выделенные (выбранные пользователем) элементы

:nth­child(odd) — выбирает нечетные дочерние элементы. 
:nth­child(even) — выбирает четные дочерние элементы.  
:nth­child(3n) — выбирает каждый третий элемент среди дочерних.  
:nth­child(3n+2) — выбирает каждый третий элемент, начиная со второго дочернего элемента (+2).  
:nth­child(n+2) — выбирает все элементы, начиная со второго.  
:nth­child(3) — выбирает третий дочерний элемент.  
:nth­last­child() — в списке дочерних элементов выбирает элемент с указанным местоположением,  аналогично с :nth­child(), но начиная с последнего, в обратную сторону.  
:first­child — позволяет оформить только самый первый дочерний элемент тега. 
:last­child — позволяет форматировать последний дочерний элемент тега.  
:only­child — выбирает элемент, являющийся единственным дочерним элементом.  
:empty — выбирает элементы, у которых нет дочерних элементов.  
:root — выбирает элемент, являющийся корневым в документе (элемент html). 

:nth­of­type() — выбирает элементы по аналогии с  
:nth­child(), при этом берет во внимание только тип элемента.  
:first­of­type — позволяет выбрать первый дочерний элемент.  
:last­of­type — выбирает последний тег конкретного типа.  
:nth­last­of­type() — выбирает элемент заданного типа в списке элементов в соответствии с указанным  местоположением, начиная с конца.  
:only­of­type — выбирает единственный элемент указанного типа среди дочерних элементов  родительского элемента.

:first­letter — выбирает первую букву каждого абзаца, применяется только к блочным элементам.  
:first­line — выбирает первую строку текста элемента, применяется только к блочным элементам.  
:before — вставляет генерируемое содержимое перед элементом.  
:after — добавляет генерируемое содержимое после элемента. 

display​:​ ​inline; - При помощи css можно изменить тип элемента, т.е. блочный тег можно сделать строчным, а строчный ­  блочным. Для этого существует css свойство ­ display.
none (скрыть);   - Скрывает блок.
block (блочный);  -  создает разрыв строки перед тегом и после него. Он образует  прямоугольную область, по ширине занимающую всю ширину веб­страницы или блока­родителя, если  для него не задано значение width. 
inline (строчный); - не создают блоки, они отображаются на одной строке с  содержимым рядом стоящих тегов.  
inline­block (строчно­блочный);  - Такие элементы являются встроенным, но для них можно задавать поля, отступы, ширину  и высоту.
table­cell (ячейка таблицы);  - ведёт себя  как ячейка TD, то есть подстраивается под размер содержимого и умеет вертикально центрировать его  при помощи vertical­align.
flex (гибкий); - это целый модуль, а не просто единичное свойство, он объединяет в себе множество свойств.
main­axis ­ главная ось, вдоль которой располагаются flex­элементы. Обратите внимание, она  необязательно должна быть горизонтальной, всё зависит от свойства justify­content (см. ниже).  
main­start | main­end ­ flex­элементы размещаются в контейнере от позиции main­start до позиции  main­end.   
main size ­ ширина или высота flex­элемента в зависимости от выбранной основной величины.  Основная величина может быть либо шириной, либо высотой элемента.   
cross axis ­ поперечная ось, перпендикулярная к главной. Её направление зависит от  направления главной оси.   
cross­start | cross­end ­ flex­строки, заполняются элементами и размещаются в контейнере от  позиции cross­start и до позиции cross­end.  
cross size ­ ширина или высота flex­элемента в зависимости от выбранной размерности  равняется этой величине. Это свойство совпадает с width или height элемента в зависимости от  выбранной размерности.
flex­start (default): гибкие элементы выравниваются по началу главной оси;   
flex­end: элементы выравниваются по концу главной оси;  
center: элементы выравниваются по центру главной оси;   
space­between: элементы занимают всю доступную ширину в контейнере, крайние элементы  вплотную прижимаются к краям контейнера, а свободное пространство равномерно  распределяется между элементами;  
space­around: гибкие элементы выравниваются таким образом, что свободное пространство  равномерно распределяется между элементами. Но стоит отметить, что пространство межу  краем контейнера и крайними элементами будет в два раза меньше, чем пространство между  элементами в середине ряда.
flex­start: все элементы прижимаются к началу строки;  
flex­end: элементы прижимаются к концу строки;  
center: элементы выравниваются по центру строки;  
baseline: элементы выравниваются по базовой линии текста;  
stretch (default): элементы растягиваются, заполняя полностью строку;  
al flex­start: все линии прижимаются к началу cross­оси;   
flex­end: все линии прижимаются к концу cross­оси;  
center: Flex­элементы выравниваются по центру flex­контейнера.  
space­between: линии распределяются от верхнего края до нижнего, оставляя свободное  пространство между строками, крайние же строки прижимаются к краям контейнера;   
space­around: линии равномерно распределяются по контейнеру;   
stretch (default): линии растягиваются, занимая все доступное пространство

box​­​shadow​:​ ​2px​ ​3px​ ​4px​ ​#ccc; - тени для блоков.  

text​­​shadow​:​ ​2px​ ​3px​ ​4px​ ​#ccc; - тени для текста.

calc() 
Браузеры: 
Firefox до версии 16.0 поддерживает значение ­moz­calc.   
Chrome до версии 26.0 поддерживает значение ­webkit­calc.   
Safari с версии 6.0 поддерживает значение ­webkit­calc.  
Internet Explorer 9.0  

@media​ screen ​and​ ​(​max​­​width​:​ ​XXXpx​)​ ​{​ ​}   - разрешение экрана максимум x px.
@media​ screen ​and​ ​(​min​­​width​:​ ​XXXpx​)​ ​{​ ​}   - разрешение экрана минимум x px.
@media​ screen ​and​ ​(​min​­​width​:​ ​XXXpx​)​ ​and​ ​(​max​­​width​:​ ​YYYpx​)​ ​{​ ​}  - разрешение экрана минимум x px и максимум y px.
@media​ screen ​and​ ​(​max​­​device​­​width​:​ ​XXXpx​)​ ​{​ } - разрешение экрана устройства максимум x px.



HTML5
<header> - Может содержать заголовки, оборачивать содержание раздела страницы, форму поиска или логотипы, группировать основной заголовок или группу заголовков.

<hgroup> - Используется для группировки элементов <h1> - <h6> в случае, когда заголовок имеет сложную структуру, например, уточняющие подзаголовки, альтернативные заголовки и т.п

<nav> - Предназначен для создания блока навигации веб-страницы или всего веб-сайта, при этом не обязательно должен находиться внутри <header>.

<article> - Используется для группировки записей — публикаций, статей, записей блога, комментариев.

<section> - Элемент представляет собой универсальный раздел документа. Группирует тематическое содержимое, не используется многократно и обычно содержит заголовок.

<aside> - Группирует содержимое, связанное с окружающим его контентом напрямую, но которое можно счесть отдельным (т.е., удаление этого блока не повлияет на понимание основного содержимого).

<footer> - Представляет собой нижний колонтитул содержащей его секции или корневого элемента. Обычно содержит информацию об авторе статьи, данные о копирайте и т.д

<address> - Используется для определения контактной информации автора/владельца документа или статьи.

<figure> -  выделяет изображение, отдельное от текста, но на которое в тексте делаются ссылки. 

<figcaption> - текст подписи к рисунку внутри элемента <figure>.

<time> - Определяет время (24 часа) или дату по григорианскому календарю с возможным указанием времени и смещения часового пояса.

<mark> - Текст, помещенный внутрь тега <mark>, выделяется по умолчанию желтым цветом (цвет фона и цвет шрифта в выделенном блоке можно изменить, задав определенные css-стили).

<bdi> - Отделяет фрагмент текста, который должен быть изолирован от остального текста для двунаправленного форматирования текста.

<wbr> - Одиночный тег, показывает браузеру место, где можно добавить разрыв длинной строки в случае необходимости.

<audio src="rubberduckies.mp3" controls preload="metadata"></audio> - 
controls - указывает браузеру, что нужно отобразить базовые элементы управления воспроизведением.
preload - указывает браузеру способ загрузки аудиофайла. Значение auto этого атрибута указывает браузеру загружать аудиофайл полностью. metadata указывает браузеру загрузить первую небольшую часть файла. none указывает браузеру не загружать аудиофайл автоматически. 
autoplay - указывает браузеру начать воспроизведение сразу же после завершения загрузки страницы.
loop  - указывает браузеру повторять воспроизведение.

<video src="video.mp4" controls></video>
controls  - указывает браузеру создать набор элементов управления воспроизведением.
height - высота.
width - ширина.
poster - позволяет указать изображение, которое можно использовать вместо видео.
preload - указывает браузеру способ загрузки аудиофайла. Значение auto этого атрибута указывает браузеру загружать аудиофайл полностью. metadata указывает браузеру загрузить первую небольшую часть файла. none указывает браузеру не загружать аудиофайл автоматически. 
autoplay - указывает браузеру начать воспроизведение сразу же после завершения загрузки страницы.
loop  - указывает браузеру повторять воспроизведение.

<source> - Браузер проводит проверку, какое видео он сможет воспроизвести.

<video width="320" height="240" controls>
<source src="video.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'>
<source src="video.webm" type='video/webm; codecs="vp8, vorbis"'>
<source src="video.ogv" type='video/ogg; codecs="theora, vorbis"'>
</video>

<track> - задает любой текст, который бы вы хотели показывать во время проигрывания медиафайлов. у него нет парного закрывающего тега (то есть, это пустой элемент). Он должен располагаться внутри тега <video> или <audio>.
<video width="640" height="320" controls>
<source src="some_video.mp4" type="video/mp4">
<source src="some_video.ogg" type="video/ogg">
<track src="some_video_subtitles.srt"
        kind="subtitles"
        srclang="en"
        label="English_subs">
</video>

srclang - указывает язык прикрепленного текста
<track src="video_subtitles.srt" kind="subtitles" srclang="en">

kind - указывает тип дорожки, которую мы добавляем к медиафайлу. 
•	Subtitles; - Субтитры (subtitles)
•	Captions; - Подписи (captions)
•	Description; - Описания (descriptions)
•	Metadata; - Метаданные (metadata)
•	Chapters; - Главы (chapters)

label - предназначен для указания названия текстовой дорожки, подключенной к аудио/видео файлу.
<track src="video_subtitles.srt"
       kind="subtitles"
       srclang="en"
       label="Английские субтитры">

default - Используется для указания дорожки, которая будет выбрана по-умолчанию.
<track kind="subtitles" src="video_subtitles_ru.srt" srclang="ru" default>


CSS3


LESS



SASS